# Generated from grammar.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,21,85,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
        2,20,7,20,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,
        6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
        1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,
        1,20,0,0,21,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,1,0,
        2,2,0,48,50,52,57,2,0,45,45,8211,8211,84,0,1,1,0,0,0,0,3,1,0,0,0,
        0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
        15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
        25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,
        35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,1,43,1,0,0,0,3,
        45,1,0,0,0,5,47,1,0,0,0,7,49,1,0,0,0,9,51,1,0,0,0,11,53,1,0,0,0,
        13,55,1,0,0,0,15,57,1,0,0,0,17,59,1,0,0,0,19,61,1,0,0,0,21,63,1,
        0,0,0,23,65,1,0,0,0,25,67,1,0,0,0,27,69,1,0,0,0,29,71,1,0,0,0,31,
        73,1,0,0,0,33,75,1,0,0,0,35,77,1,0,0,0,37,79,1,0,0,0,39,81,1,0,0,
        0,41,83,1,0,0,0,43,44,5,46,0,0,44,2,1,0,0,0,45,46,5,51,0,0,46,4,
        1,0,0,0,47,48,7,0,0,0,48,6,1,0,0,0,49,50,7,1,0,0,50,8,1,0,0,0,51,
        52,5,65,0,0,52,10,1,0,0,0,53,54,5,66,0,0,54,12,1,0,0,0,55,56,5,67,
        0,0,56,14,1,0,0,0,57,58,5,69,0,0,58,16,1,0,0,0,59,60,5,70,0,0,60,
        18,1,0,0,0,61,62,5,71,0,0,62,20,1,0,0,0,63,64,5,72,0,0,64,22,1,0,
        0,0,65,66,5,73,0,0,66,24,1,0,0,0,67,68,5,75,0,0,68,26,1,0,0,0,69,
        70,5,76,0,0,70,28,1,0,0,0,71,72,5,77,0,0,72,30,1,0,0,0,73,74,5,80,
        0,0,74,32,1,0,0,0,75,76,5,82,0,0,76,34,1,0,0,0,77,78,5,83,0,0,78,
        36,1,0,0,0,79,80,5,84,0,0,80,38,1,0,0,0,81,82,5,86,0,0,82,40,1,0,
        0,0,83,84,5,87,0,0,84,42,1,0,0,0,1,0,0
    ]

class fulling_motor_nameLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    Three = 2
    RestOfDigits = 3
    Dash = 4
    A = 5
    B = 6
    C = 7
    E = 8
    F = 9
    G = 10
    H = 11
    I = 12
    K = 13
    L = 14
    M = 15
    P = 16
    R = 17
    S = 18
    T = 19
    V = 20
    W = 21

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "'3'", "'A'", "'B'", "'C'", "'E'", "'F'", "'G'", "'H'", 
            "'I'", "'K'", "'L'", "'M'", "'P'", "'R'", "'S'", "'T'", "'V'", 
            "'W'" ]

    symbolicNames = [ "<INVALID>",
            "Three", "RestOfDigits", "Dash", "A", "B", "C", "E", "F", "G", 
            "H", "I", "K", "L", "M", "P", "R", "S", "T", "V", "W" ]

    ruleNames = [ "T__0", "Three", "RestOfDigits", "Dash", "A", "B", "C", 
                  "E", "F", "G", "H", "I", "K", "L", "M", "P", "R", "S", 
                  "T", "V", "W" ]

    grammarFileName = "grammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


