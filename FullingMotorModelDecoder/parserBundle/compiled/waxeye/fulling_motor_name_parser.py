# Generated by the Waxeye Parser Generator - version 0.8.1
# www.waxeye.org

from waxeye import Edge, State, FA, WaxeyeParser

class Fulling_motor_nameParser (WaxeyeParser):
    start = 0
    eof_check = True
    automata = [FA("main", [State([Edge(75, 1, False),
                Edge(46, 2, False)], False),
            State([Edge(46, 2, False)], False),
            State([Edge(2, 3, False)], False),
            State([], True)], FA.LEFT),
        FA("gearbox_specifier", [State([Edge(63, 1, False)], False),
            State([Edge(49, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("type_specific", [State([Edge(22, 1, False),
                Edge(25, 1, False),
                Edge(32, 1, False),
                Edge(3, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("three_phase_t", [State([Edge(52, 1, False)], False),
            State([Edge(46, 2, False)], False),
            State([Edge(4, 3, False)], False),
            State([], True)], FA.LEFT),
        FA("three_phase_suffix_opt_our", [State([Edge(5, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("three_phase_suffix_t", [State([Edge(56, 1, False)], False),
            State([Edge(44, 2, False)], False),
            State([Edge(44, 3, False)], False),
            State([Edge(16, 4, False)], False),
            State([], True)], FA.LEFT),
        FA("stepper_suffix_t", [State([Edge(56, 1, False)], False),
            State([Edge(7, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("suffix_with_or_without_tail", [State([Edge(8, 1, False),
                Edge(20, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("suffix_with_current", [State([Edge(45, 1, False)], False),
            State([Edge(20, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("double_step_rate_marker", [State([Edge(68, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("encoder_presence_marker", [State([Edge(61, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("unknown_marker_F", [State([Edge(62, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("keyway_marker", [State([Edge(66, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("screwed_shaft_marker", [State([Edge(60, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("gearbox_specifier_opt_our", [State([Edge(1, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("hollow_specifier_opt_our", [State([Edge(53, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("shafts_count_marker_opt_our", [State([Edge(42, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("shafts_count_and_step_rate_any_order_1_t", [State([Edge(16, 1, False)], False),
            State([Edge(9, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("shafts_count_and_step_rate_any_order_2_t", [State([Edge(9, 1, False)], False),
            State([Edge(16, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("shafts_count_and_step_rate_any_order_t", [State([Edge(17, 1, False),
                Edge(18, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("stepper_suffix_tail", [State([Edge(36, 1, False)], False),
            State([Edge(19, 2, False)], False),
            State([Edge(10, 3, False)], False),
            State([Edge(11, 4, False)], False),
            State([Edge(12, 5, False)], False),
            State([Edge(13, 6, False)], False),
            State([Edge(14, 7, False)], False),
            State([Edge(15, 8, False)], False),
            State([], True)], FA.LEFT),
        FA("stepper_modifiers_opt_our", [State([Edge(39, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("stepper_t", [State([Edge(24, 1, False)], False),
            State([Edge(21, 2, False)], False),
            State([Edge(46, 3, False)], False),
            State([Edge(6, 4, False)], False),
            State([], True)], FA.LEFT),
        FA("stepper_series_opt_our", [State([Edge(38, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("stepper_marker", [State([Edge(71, 1, False)], False),
            State([Edge(23, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("permanent_t", [State([Edge(76, 1, False)], False),
            State([Edge(44, 2, False)], False),
            State([Edge(6, 3, False)], False),
            State([], True)], FA.LEFT),
        FA("brushless_marker", [State([Edge(40, 1, False)], False),
            State([Edge(78, 2, False)], False),
            State([Edge(77, 3, False)], False),
            State([Edge(79, 4, False)], False),
            State([Edge(37, 5, False)], False),
            State([Edge(40, 6, False)], False),
            State([], True)], FA.LEFT),
        FA("execution_configuration_t", [State([Edge(56, 1, False)], False),
            State([Edge(47, 2, False)], False),
            State([Edge(41, 3, False)], False),
            State([], True)], FA.LEFT),
        FA("brushless_modifier_variants", [State([Edge(29, 1, False),
                Edge(30, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("brushless_modifier_poles_torque", [State([Edge(51, 1, False)], False),
            State([Edge(44, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("brushless_modifier_length_electronics_electrics", [State([Edge(46, 1, False)], False),
            State([Edge(31, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("brushless_tail_opt_our", [State([Edge(33, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("brushless_t", [State([Edge(26, 1, False)], False),
            State([Edge(28, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("brushless_tail", [State([Edge(35, 1, False),
                Edge(27, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("execution_configuration_opt_our", [State([Edge(27, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("brushless_electronic_tail", [State([Edge(50, 1, False)], False),
            State([Edge(34, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("digit", [State([Edge(55, 1, False),
                Edge(54, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("square_marker", [State([Edge(71, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("stepper_series", [State([Edge(72, 1, False),
                Edge(64, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("stepper_modifiers_t", [State([Edge(64, 1, False),
                Edge(60, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("price_performance_or_unknown_C_marker", [State([Edge(60, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("electrical_unit", [State([Edge(58, 1, False),
                Edge(73, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("shafts_count_marker", [State([Edge(58, 1, False),
                Edge(59, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("one_or_two_digit_number", [State([Edge(36, 1, False)], False),
            State([Edge(36, 2, False)], True),
            State([], True)], FA.LEFT),
        FA("two_digit_number", [State([Edge(36, 1, False)], False),
            State([Edge(36, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("three_digit_number", [State([Edge(44, 1, False)], False),
            State([Edge(36, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("two_or_three_digit_number", [State([Edge(44, 1, False)], False),
            State([Edge(36, 2, False)], True),
            State([], True)], FA.LEFT),
        FA("any_integer", [State([Edge(36, 1, False)], False),
            State([Edge(36, 1, False)], True)], FA.LEFT),
        FA("fractional_part", [State([Edge(57, 1, False)], False),
            State([Edge(47, 2, False)], True),
            State([], True)], FA.LEFT),
        FA("float_number", [State([Edge(47, 1, False)], False),
            State([Edge(48, 2, False)], True),
            State([], True)], FA.LEFT),
        FA("integrated_electronic_marker", [State([Edge(56, 1, False)], False),
            State([Edge(65, 2, False)], False),
            State([Edge(61, 3, False)], False),
            State([], True)], FA.LEFT),
        FA("brushless_modifier_poles_torque_letter", [State([Edge(58, 1, False),
                Edge(59, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("three_phase_marker", [State([Edge(54, 1, False)], False),
            State([Edge(69, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("hollow_specifier", [State([Edge(56, 1, False)], False),
            State([Edge(64, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("three", [State([Edge("3", 1, False)], False),
            State([], True)], FA.LEFT),
        FA("restOfDigits", [State([Edge([(48, 50), (52, 57)], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("dash", [State([Edge(["-", "â€“"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("dot", [State([Edge(".", 1, False)], False),
            State([], True)], FA.LEFT),
        FA("a", [State([Edge(["A", "a"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("b", [State([Edge(["B", "b"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("c", [State([Edge(["C", "c"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("e", [State([Edge(["E", "e"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("f", [State([Edge(["F", "f"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("g", [State([Edge(["G", "g"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("h", [State([Edge(["H", "h"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("i", [State([Edge(["I", "i"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("k", [State([Edge(["K", "k"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("l", [State([Edge(["L", "l"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("m", [State([Edge(["M", "m"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("p", [State([Edge(["P", "p"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("r", [State([Edge(["R", "r"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("s", [State([Edge(["S", "s"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("t", [State([Edge(["T", "t"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("v", [State([Edge(["V", "v"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("w", [State([Edge(["W", "w"], 1, False)], False),
            State([], True)], FA.LEFT),
        FA("fl", [State([Edge(62, 1, False)], False),
            State([Edge(67, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("permanent_marker", [State([Edge(69, 1, False)], False),
            State([Edge(68, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("brushless_marker_base", [State([Edge(59, 1, False)], False),
            State([Edge(67, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("rounded_marker", [State([Edge(70, 1, False)], True),
            State([], True)], FA.LEFT),
        FA("brushless_flat_marker", [State([Edge(74, 1, False)], True),
            State([], True)], FA.LEFT)]

    def __init__(self):
        WaxeyeParser.__init__(self, Fulling_motor_nameParser.start, Fulling_motor_nameParser.eof_check, Fulling_motor_nameParser.automata)

