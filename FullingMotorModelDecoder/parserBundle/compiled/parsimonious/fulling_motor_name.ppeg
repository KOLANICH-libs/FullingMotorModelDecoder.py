#Generated by UniGrammar (https://github.com/UniGrammar/UniGrammar.py)
#for parsimonious (https://github.com/erikrose/parsimonious) DSL

#A grammar for parsing Changzhou Fulling Motor Co., Ltd. model namebers



#productions
main = fl? two_or_three_digit_number type_specific
gearbox_specifier = G float_number
type_specific = stepper_t / permanent_t / brushless_t / three_phase_t
three_phase_t = three_phase_marker two_or_three_digit_number three_phase_suffix_opt_our
three_phase_suffix_opt_our = three_phase_suffix_t?
three_phase_suffix_t = Dash two_digit_number two_digit_number shafts_count_marker_opt_our
stepper_suffix_t = Dash suffix_with_or_without_tail
suffix_with_or_without_tail = suffix_with_current / stepper_suffix_tail
suffix_with_current = three_digit_number stepper_suffix_tail
double_step_rate_marker = M?
encoder_presence_marker = E?
unknown_marker_F = F?
keyway_marker = K?
screwed_shaft_marker = C?
gearbox_specifier_opt_our = gearbox_specifier?
hollow_specifier_opt_our = hollow_specifier?
shafts_count_marker_opt_our = shafts_count_marker?
shafts_count_and_step_rate_any_order_1_t = shafts_count_marker_opt_our double_step_rate_marker
shafts_count_and_step_rate_any_order_2_t = double_step_rate_marker shafts_count_marker_opt_our
shafts_count_and_step_rate_any_order_t = shafts_count_and_step_rate_any_order_1_t / shafts_count_and_step_rate_any_order_2_t
stepper_suffix_tail = digit shafts_count_and_step_rate_any_order_t encoder_presence_marker unknown_marker_F keyway_marker screwed_shaft_marker gearbox_specifier_opt_our hollow_specifier_opt_our
stepper_modifiers_opt_our = stepper_modifiers_t?
stepper_t = stepper_marker stepper_modifiers_opt_our two_or_three_digit_number stepper_suffix_t
stepper_series_opt_our = stepper_series?
stepper_marker = S stepper_series_opt_our
permanent_t = permanent_marker two_digit_number stepper_suffix_t
brushless_marker = price_performance_or_unknown_C_marker rounded_marker brushless_marker_base brushless_flat_marker square_marker price_performance_or_unknown_C_marker
execution_configuration_t = Dash any_integer electrical_unit
brushless_modifier_variants = brushless_modifier_poles_torque / brushless_modifier_length_electronics_electrics
brushless_modifier_poles_torque = brushless_modifier_poles_torque_letter two_digit_number
brushless_modifier_length_electronics_electrics = two_or_three_digit_number brushless_tail_opt_our
brushless_tail_opt_our = brushless_tail?
brushless_t = brushless_marker brushless_modifier_variants
brushless_tail = brushless_electronic_tail / execution_configuration_t
execution_configuration_opt_our = execution_configuration_t?
brushless_electronic_tail = integrated_electronic_marker execution_configuration_opt_our


#fragmented
digit = RestOfDigits / Three
square_marker = S?
stepper_series = T / H
stepper_modifiers_t = (H / C)
price_performance_or_unknown_C_marker = C?
electrical_unit = A / V
shafts_count_marker = A / B
one_or_two_digit_number = digit digit?
two_digit_number = digit digit
three_digit_number = two_digit_number digit
two_or_three_digit_number = two_digit_number digit?
any_integer = digit+
fractional_part = dot any_integer?
float_number = any_integer fractional_part?
integrated_electronic_marker = Dash I E
brushless_modifier_poles_torque_letter = A / B
three_phase_marker = Three P
hollow_specifier = Dash H


#characters
Three = '3'
RestOfDigits = ~r"[0-24-9]"
Dash = ~r"[â€“-]"
dot = '.'
A = 'A'
B = 'B'
C = 'C'
E = 'E'
F = 'F'
G = 'G'
H = 'H'
I = 'I'
K = 'K'
L = 'L'
M = 'M'
P = 'P'
R = 'R'
S = 'S'
T = 'T'
V = 'V'
W = 'W'


#tokens
fl = F L
permanent_marker = P M
brushless_marker_base = B L
rounded_marker = R?
brushless_flat_marker = W?

