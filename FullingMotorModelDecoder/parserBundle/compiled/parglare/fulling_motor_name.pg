//Generated by UniGrammar (https://github.com/UniGrammar/UniGrammar.py)
//for parglare (https://github.com/igordejanovic/parglare) DSL

//A grammar for parsing Changzhou Fulling Motor Co., Ltd. model namebers



//productions
main: fl? size=two_or_three_digit_number typed=type_specific;
gearbox_specifier: G ratio=float_number;
type_specific: stepper=stepper_t | permanent=permanent_t | brushless=brushless_t | three_phase=three_phase_t;
three_phase_t: type_marker=three_phase_marker motor_body_length=two_or_three_digit_number suffix=three_phase_suffix_opt_our;
three_phase_suffix_opt_our: three_phase_suffix_t?;
three_phase_suffix_t: Dash current_per_phase_over_ten=two_digit_number leads=two_digit_number shafts_count=shafts_count_marker_opt_our;
stepper_suffix_t: Dash suffix_body=suffix_with_or_without_tail;
suffix_with_or_without_tail: with_current=suffix_with_current | without_current=stepper_suffix_tail;
suffix_with_current: current=three_digit_number tail=stepper_suffix_tail;
double_step_rate_marker: M?;
encoder_presence_marker: E?;
unknown_marker_F: F?;
keyway_marker: K?;
screwed_shaft_marker: C?;
gearbox_specifier_opt_our: gearbox_specifier?;
hollow_specifier_opt_our: hollow_specifier?;
shafts_count_marker_opt_our: shafts_count_marker?;
shafts_count_and_step_rate_any_order_1_t: shafts_count=shafts_count_marker_opt_our step_rate=double_step_rate_marker;
shafts_count_and_step_rate_any_order_2_t: step_rate=double_step_rate_marker shafts_count=shafts_count_marker_opt_our;
shafts_count_and_step_rate_any_order_t: shafts_count_and_step_rate_any_order_1=shafts_count_and_step_rate_any_order_1_t | shafts_count_and_step_rate_any_order_2=shafts_count_and_step_rate_any_order_2_t;
stepper_suffix_tail: variant=digit shafts_count_and_step_rate_any_order=shafts_count_and_step_rate_any_order_t encoder=encoder_presence_marker unknown_F=unknown_marker_F key_way=keyway_marker screwed_shaft=screwed_shaft_marker gearbox=gearbox_specifier_opt_our hollow=hollow_specifier_opt_our;
stepper_modifiers_opt_our: stepper_modifiers_t?;
stepper_t: type_marker=stepper_marker stepper_modifiers=stepper_modifiers_opt_our motor_body_length=two_or_three_digit_number suffix=stepper_suffix_t;
stepper_series_opt_our_opt: stepper_series | EMPTY;
stepper_series_opt_our: stepper_series_opt_our_opt {shift};
stepper_marker: S series=stepper_series_opt_our;
permanent_t: type_marker=permanent_marker motor_body_length=two_digit_number suffix=stepper_suffix_t;
brushless_marker: is_price_performance=price_performance_or_unknown_C_marker is_round=rounded_marker brushless_marker_base is_flat=brushless_flat_marker is_square=square_marker is_unknown_C=price_performance_or_unknown_C_marker;
execution_configuration_t: Dash number=any_integer unit=electrical_unit;
brushless_modifier_variants: poles_torque=brushless_modifier_poles_torque | length_electronics_electrics=brushless_modifier_length_electronics_electrics;
brushless_modifier_poles_torque: poles_or_other=brushless_modifier_poles_torque_letter variant=two_digit_number;
brushless_modifier_length_electronics_electrics: motor_body_length=two_or_three_digit_number tail=brushless_tail_opt_our;
brushless_tail_opt_our: brushless_tail?;
brushless_t: type_marker=brushless_marker modifier=brushless_modifier_variants;
brushless_tail: electronic=brushless_electronic_tail | no_electronic=execution_configuration_t;
execution_configuration_opt_our: execution_configuration_t?;
brushless_electronic_tail: has_electronics=integrated_electronic_marker cfg=execution_configuration_opt_our;


//fragmented
digit: RestOfDigits | Three;
square_marker: S?;
stepper_series: standard=T | hybrid=H;
stepper_modifiers_t: stepper_modifiers=(H | C);
price_performance_or_unknown_C_marker: C?;
electrical_unit: A | V;
shafts_count_marker: A | B;
one_or_two_digit_number_opt: digit | EMPTY;
one_or_two_digit_number: digit (one_or_two_digit_number_opt {shift});
two_digit_number: digit digit;
three_digit_number: two_digit_number digit;
two_or_three_digit_number_opt: digit | EMPTY;
two_or_three_digit_number: two_digit_number (two_or_three_digit_number_opt {shift});
any_integer: digit+;
fractional_part: dot any_integer?;
float_number: any_integer fractional_part?;
integrated_electronic_marker: Dash I E;
brushless_modifier_poles_torque_letter: A | B;
three_phase_marker: Three P;
hollow_specifier: Dash H;


LAYOUT: EMPTY;
//tokens
fl: F L;
permanent_marker: P M;
brushless_marker_base: B L;
rounded_marker: R?;
brushless_flat_marker: W?;


terminals
//characters
Three: '3';
RestOfDigits: /[0-24-9]/;
Dash: /[â€“-]/;
dot: '.';
A: 'A';
B: 'B';
C: 'C';
E: 'E';
F: 'F';
G: 'G';
H: 'H';
I: 'I';
K: 'K';
L: 'L';
M: 'M';
P: 'P';
R: 'R';
S: 'S';
T: 'T';
V: 'V';
W: 'W';

